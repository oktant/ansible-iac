---

- name: Stop "{{ kafka_docker_container_name }}"
  docker_container:
    name: "{{ kafka_docker_container_name }}"
    state: stopped
  ignore_errors: yes

- name: Remove "{{ kafka_docker_container_name }}"
  docker_container:
    name: "{{ kafka_docker_container_name }}"
    state: absent
  ignore_errors: yes



- name: Pull the Docker image with the name '{{ kafka_docker_image }}'
  docker_image:
    name: "{{ kafka_docker_image }}"

- name: Run the Docker image with the name '{{ kafka_docker_image }}'nop
  docker_container:
    name: "{{ kafka_docker_container_name }}"
    image: "{{ kafka_docker_image }}"
    env:
      KAFKA_ZOOKEEPER_CONNECT: "{{ target_host_ip }}:2181"
      KAFKA_ADVERTISED_HOST_NAME: "{{ target_host_ip }}"
    published_ports: "{{ kafka_exposed_port }}:{{ kafka_internal_port }}"
    restart_policy: always



- name: get container status
  shell: docker inspect "{{ kafka_docker_container_name }}"
  register: status

- name: Set container status as json from message output
  set_fact:
    statusJson: "{{ status.stdout | from_json }}"

- name: Set container state variable
  set_fact:
    containerState: "{{ statusJson[0] }}"

- name: Assert that "{{ kafka_docker_container_name }}" is running
  assert:
    that:
      - "{{ containerState.State.Running}} == true"
- name: Assert that "{{ kafka_docker_container_name }}" did not restart
  assert:
    that:
      - "{{ containerState.State.Restarting}} == false"
